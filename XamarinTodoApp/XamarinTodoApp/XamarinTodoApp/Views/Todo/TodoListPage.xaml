<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
    x:Class="XamarinTodoApp.Views.TodoListPage"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:local="clr-namespace:XamarinTodoApp.ViewModels"
    xmlns:model="clr-namespace:XamarinTodoApp.Models"
    xmlns:todo="clr-namespace:XamarinTodoApp.ViewModels.Todo"
    xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
    x:Name="BrowseTodoPage"
    Title="{Binding Title}"
    x:DataType="local:TodoListViewModel"
    BackgroundColor="WhiteSmoke">


    <ContentPage.ToolbarItems>
        <ToolbarItem Command="{Binding AddItemCommand}" Text="Add" />
        <ToolbarItem Command="{Binding TestCommand}" Text="AddTest" />
    </ContentPage.ToolbarItems>


    <!--<ContentPage.BindingContext>
        <local:TodoListViewModel />
    </ContentPage.BindingContext>-->


    <ContentPage.Resources>
        <ResourceDictionary>
            <xct:ItemSelectedEventArgsConverter x:Key="ItemTappedEventArgsConverter" />
        </ResourceDictionary>
    </ContentPage.Resources>

    <!--<ActivityIndicator
            AbsoluteLayout.LayoutBounds="0,0,1,1"
            AbsoluteLayout.LayoutFlags="All"
            HeightRequest="40"
            IsRunning="{Binding CanCheck, Converter={xct:InvertedBoolConverter}}"
            WidthRequest="40" />-->
    <!--  Converter={xct:InvertedBoolConverter}  -->
    <AbsoluteLayout>
        <ActivityIndicator
            AbsoluteLayout.LayoutBounds=".5,0,-1,1"
            AbsoluteLayout.LayoutFlags="PositionProportional"
            HeightRequest="40"
            IsRunning="{Binding IsLoading}"
            WidthRequest="40" />
        <StackLayout AbsoluteLayout.LayoutBounds="0,0,1,1" AbsoluteLayout.LayoutFlags="All">

            <Label Text="{Binding Coins, Source={StaticResource userDataVM}, StringFormat='Coins: {0}'}" />
            <Button Command="{Binding Source={RelativeSource AncestorType={x:Type local:TodoListViewModel}}, Path=SortAlphabeticallyCommand}" Text="A-Z" />

            <!--<Label Text="Level" />
            <Label Text="{Binding UserDataViewModel.Level, Mode=TwoWay}" />-->
            <Label Text="Level" />
            <Label Text="{Binding Level, Source={StaticResource userDataVM}, Mode=TwoWay}" />

            <Label Text="CurrentExp" />
            <Label Text="{Binding Experience, Source={StaticResource userDataVM}, Mode=TwoWay}" />

            <Label Text="ExpToNextLvl" />
            <Label Text="{Binding ExperienceToNextLevel, Source={StaticResource userDataVM}, Mode=TwoWay}" />

            <ProgressBar Progress="{Binding Progress, Source={StaticResource userDataVM}, Mode=TwoWay}" ProgressColor="Red" />


            <RefreshView
                x:DataType="local:TodoListViewModel"
                Command="{Binding LoadItemsCommand}"
                IsRefreshing="{Binding IsBusy, Mode=TwoWay}">

                <CollectionView
                    x:Name="TodoListView"
                    Margin="10,0,10,0"
                    ItemsSource="{Binding Items}"
                    SelectionMode="None">
                    <CollectionView.ItemsLayout>
                        <LinearItemsLayout ItemSpacing="10" Orientation="Vertical" />
                    </CollectionView.ItemsLayout>

                    <CollectionView.ItemTemplate>

                        <DataTemplate>
                            <Frame
                                Padding="1"
                                x:DataType="todo:TodoItemViewModel"
                                CornerRadius="10"
                                HasShadow="True">
                                <Frame.GestureRecognizers>
                                    <TapGestureRecognizer
                                        Command="{Binding Source={RelativeSource AncestorType={x:Type local:TodoListViewModel}}, Path=ItemTapped}"
                                        CommandParameter="{Binding .}"
                                        NumberOfTapsRequired="1" />
                                </Frame.GestureRecognizers>
                                <Grid
                                    Margin="5,5,5,5"
                                    Padding="0"
                                    RowSpacing="1">


                                    <Grid.RowDefinitions Height="20">
                                        <RowDefinition Height="40" />
                                        <RowDefinition Height="30" />
                                    </Grid.RowDefinitions>

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="70" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="60" />
                                    </Grid.ColumnDefinitions>

                                    <CheckBox
                                        Grid.Row="0"
                                        Grid.RowSpan="2"
                                        HorizontalOptions="Center"
                                        IsChecked="{Binding IsChecked}"
                                        IsEnabled="{Binding Source={RelativeSource AncestorType={x:Type local:TodoListViewModel}}, Path=IsLoading, Converter={xct:InvertedBoolConverter}}"
                                        VerticalOptions="Center">


                                        <!--
                                            CheckedChanged="CheckBox_CheckedChanged"
                                            Command="{Binding BindingContext.CheckedCommand, Source={x:Reference BrowseTodoPage}}"
                                            CommandParameter="{Binding .}"
                                        -->
                                        <!--<CheckBox.Behaviors>
                                            <xct:EventToCommandBehavior
                                                Command="{Binding BindingContext.CheckedCommand, Source={x:Reference BrowseTodoPage}}"
                                                CommandParameter="{Binding .}"
                                                EventName="CheckedChanged" />

                                        </CheckBox.Behaviors>-->

                                    </CheckBox>
                                    <Label
                                        Grid.Row="0"
                                        Grid.Column="1"
                                        Padding="10,10,10,10"
                                        FontSize="18"
                                        Text="{Binding Item.Text}"
                                        VerticalOptions="Center" />

                                    <Label
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        Padding="10,5,5,5"
                                        FontSize="14"
                                        Text="{Binding Item.Reward}"
                                        VerticalOptions="Center" />

                                    <Label
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        Padding="10,5,5,5"
                                        FontSize="14"
                                        HorizontalTextAlignment="End"
                                        Text="{Binding Item.ExpReward}"
                                        VerticalOptions="Center" />

                                    <Button
                                        Grid.Row="0"
                                        Grid.RowSpan="2"
                                        Grid.Column="2"
                                        BackgroundColor="LightGray"
                                        Command="{Binding Source={RelativeSource AncestorType={x:Type local:TodoListViewModel}}, Path=DeleteItemCommand}"
                                        CommandParameter="{Binding .}"
                                        HeightRequest="40"
                                        HorizontalOptions="Center"
                                        Text="Del"
                                        VerticalOptions="Center"
                                        WidthRequest="70" />


                                </Grid>
                            </Frame>

                        </DataTemplate>
                    </CollectionView.ItemTemplate>
                </CollectionView>
            </RefreshView>

        </StackLayout>
    </AbsoluteLayout>
</ContentPage>








<!--
    1 - make list item with gridview
    that has a checkbox, and reward and name text
    
    when checkbox is clicked set isdone to !isdone and strikethrough name text
    
    2 - add the item to the listview and link the commands
    
    3 - when checkbox is clicked add reward to user data cons in database
-->